# syntax = docker/dockerfile:1.2
FROM phusion/baseimage:0.11

ENV PROJECT_DIR /{{ cookiecutter.project_name }}

# If you're mounting local volumes for development (or using docker-compose to do
# this), change 1000 to be your id. This solves permission issues.
RUN groupadd --gid 1000 -o appuser
RUN adduser --uid 1000 --gid 1000 --disabled-password --gecos "" appuser
RUN mkdir /app
RUN chown -R appuser:appuser /app
WORKDIR $PROJECT_DIR

# apt update and install required packages
RUN apt-get update && \
    apt-get upgrade -y && \
    # Add official sorurce for nodejs and npm
    # https://github.com/nodesource/distributions#debinstall
    apt-get -y install gpg-agent && \
    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
    apt-get -y --no-install-recommends install software-properties-common \
        build-essential \
        cron \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python3-virtualenv \
        libpq-dev \
        logrotate \
        netcat \
        nginx \
        nodejs && \
    npm install -g yuglify sass && \
    # Clean up
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copy logrotate files
COPY logrotate/nginx /etc/logrotate.d/nginx
COPY logrotate/uwsgi /etc/logrotate.d/uwsgi

# Set up virtual environment
ENV VIRTUAL_ENV_DIR /.venv
RUN python3 -m virtualenv --python=python3 $VIRTUAL_ENV_DIR
# Set the virtual environment as the main Python directory
ENV PATH $VIRTUAL_ENV_DIR/bin:$PATH

# Upgrade pip and install pip-tools
RUN --mount=type=cache,target=/root/.cache/pip pip3 install --upgrade pip
RUN --mount=type=cache,target=/root/.cache/pip pip3 install pip-tools

# Copy and install requirements
COPY ./requirements.txt $PROJECT_DIR/requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip [ -e $PROJECT_DIR/requirements.txt ] && pip-sync $PROJECT_DIR/requirements.txt

# Production related setup
COPY ./nginx.conf /etc/nginx/nginx.conf
COPY ./app_nginx.conf /etc/nginx/sites-available/app_nginx.conf

EXPOSE 8000

ENTRYPOINT /$PROJECT_DIR/dockerfiles/entrypoint.sh
CMD /$PROJECT_DIR/dockerfiles/run.sh


ENV ENVIRONMENT tests

COPY ./requirements_test.txt $PROJECT_DIR/requirements_test.txt

RUN --mount=type=cache,target=/root/.cache/pip pip-sync $PROJECT_DIR/requirements_test.txt

ENTRYPOINT []
CMD []
