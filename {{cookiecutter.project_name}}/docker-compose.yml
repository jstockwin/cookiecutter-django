# -----------------------------------------------------------------------------
# 'shell' service is used to open a bash shell.
#
# Usage:
#   docker-compose run --rm bash
# -----------------------------------------------------------------------------
shell-dev:
  build: .
  user: appuser
  dockerfile: dockerfiles/Dockerfile
  volumes:
    - .:/{{ cookiecutter.project_name }}
  command: bash
  links:
    - postgresql-dev:postgresql_dev
  environment:
    - ENVIRONMENT=development
    - ALLOWED_HOSTS=*
    - POSTGRESQL_HOST=postgresql_dev
    - POSTGRESQL_PORT=5432
    - POSTGRESQL_USER=postgres
    - POSTGRESQL_PASSWORD=development
    - POSTGRESQL_DATABASE={{ cookiecutter.project_name }}_dev
# -----------------------------------------------------------------------------
# 'server-dev' service is used to run the development server
#
# Usage:
#   docker-compose run --rm server-dev
# -----------------------------------------------------------------------------
server-dev:
  build: .
  user: appuser
  dockerfile: dockerfiles/Dockerfile
  volumes:
    - .:/{{ cookiecutter.project_name }}
  ports:
    - "8080:8080"
  links:
    - postgresql-dev:postgresql_dev
  environment:
    - ENVIRONMENT=development
    - ALLOWED_HOSTS=*
    - POSTGRESQL_HOST=postgresql_dev
    - POSTGRESQL_PORT=5432
    - POSTGRESQL_USER=postgres
    - POSTGRESQL_PASSWORD=development
    - POSTGRESQL_DATABASE={{ cookiecutter.project_name }}_dev


# -----------------------------------------------------------------------------
# 'server-prod' service is used to run the production server locally
#
# Usage:
#   docker-compose run --rm server-dev
# -----------------------------------------------------------------------------
server-prod:
  build: .
  user: root
  dockerfile: dockerfiles/Dockerfile
  volumes:
    - .:/{{ cookiecutter.project_name }}
  ports:
    - "8000:8000"
  links:
    - postgresql-dev:postgresql_dev
  environment:
    - ENVIRONMENT=production
    - ALLOWED_HOSTS=*
    - POSTGRESQL_HOST=postgresql_dev
    - POSTGRESQL_PORT=5432
    - POSTGRESQL_USER=postgres
    - POSTGRESQL_PASSWORD=development
    - POSTGRESQL_DATABASE={{ cookiecutter.project_name }}_dev

# -----------------------------------------------------------------------------
# 'lint' service is used to check for any linting or type checking errors
#
# Usage:
#   docker-compose run --rm lint
# -----------------------------------------------------------------------------
lint:
  build: .
  user: appuser
  dockerfile: dockerfiles/Dockerfile_tests
  volumes:
    - .:/{{ cookiecutter.project_name }}
  command: bash -c "black /{{ cookiecutter.project_name }}/app --check && pycodestyle /{{ cookiecutter.project_name }}/app --config=pycodestyle.cfg"

# -----------------------------------------------------------------------------
# 'lint-fix' service is used to fix linting using the black package
#
# Usage:
#   docker-compose run --rm lint
# -----------------------------------------------------------------------------
lint-fix:
  build: .
  user: appuser
  dockerfile: dockerfiles/Dockerfile_tests
  volumes:
    - .:/{{ cookiecutter.project_name }}
  command: bash -c "black /{{ cookiecutter.project_name }}/app"

# -----------------------------------------------------------------------------
# 'pip-compile' service is used to add new packages listed in requirements*.in.
#
# Usage:
#   docker-compose run --rm pip-compile
# -----------------------------------------------------------------------------
pip-compile:
  build: .
  dockerfile: dockerfiles/Dockerfile
  entrypoint: []
  user: appuser
  volumes:
    - .:/{{ cookiecutter.project_name }}
  command: >
    bash --login -c "
      pip-compile --output-file requirements.txt requirements.in &&
      pip-compile --output-file requirements_test.txt requirements_test.in"
# -----------------------------------------------------------------------------
# 'pip-compile-upgrade-requirements' service is used to upgrade packages
# located in requirements*.in.
#
# Usage:
#   UPGRADE_PACKAGE=<package_name> docker-compose run --rm pip-compile-upgrade-requirements
# -----------------------------------------------------------------------------
pip-compile-upgrade-requirements:
  extends:
    service: pip-compile
  command: >
    bash --login -c "
      pip-compile --upgrade-package $UPGRADE_PACKAGE --output-file requirements.txt requirements.in &&
      pip-compile --upgrade-package $UPGRADE_PACKAGE --output-file requirements_test.txt requirements_test.in"


# -----------------------------------------------------------------------------
# 'postgresql-dev' service is used to provide server-dev with a database
# -----------------------------------------------------------------------------
postgresql-dev:
  image: postgres:9.6
  volumes:
    - ./tmp/postgresql:/var/lib/postgresql/data
  environment:
    POSTGRES_DB: {{ cookiecutter.project_name }}_dev
    POSTGRES_PASSWORD: development
